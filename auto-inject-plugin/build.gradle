apply plugin: 'groovy'

group 'com.eastwood.tools.plugins'
sourceCompatibility = 1.8

repositories {
    jcenter()
    google()
}

dependencies {

    implementation gradleApi()
    implementation localGroovy()
    implementation 'com.android.tools.build:gradle:3.6.3'
    implementation 'org.ow2.asm:asm:6.0'
}

def localReleaseDest = "${buildDir}/release/${version}"

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from groovydoc.getDestinationDir()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
apply plugin: 'maven'

def groupId = 'com.eastwood.tools.plugins'
def artifactId = 'autoinject'
def version = '1.0.0'


uploadArchives {
    repositories {
        mavenDeployer {
            pom.groupId = groupId
            pom.artifactId = artifactId
            pom.version = version
            // Add other pom properties here if you want (developer details / licenses)
            //提交到远程服务器：
            // repository(url: "http://www.xxx.com/repos") {
            //    authentication(userName: "admin", password: "admin")
            // }
            //本地的Maven地址:当前工程下
            repository(url: uri('../repository'))
        }
    }
}

task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDir buildDir
    archiveName "release-${version}.zip"
}

task generateRelease {
    doLast {
        println "Release ${version} can be found at ${localReleaseDest}/"
        println "Release ${version} zipped can be found ${buildDir}/release-${version}.zip"
    }
}

generateRelease.dependsOn(uploadArchives)
generateRelease.dependsOn(zipRelease)

artifacts {
    archives groovydocJar
    archives sourcesJar
}